HOW THE ORIGINAL mintconstructor.py WORKS

DIALOG BOX 1A: 
Select existing project or new project.  (Select an existing project, and find your ISO file.)

DIALOG BOX 1B:
Continue?  This may take a few minutes.  Select yes or no.  (Select yes.)

DIALOG BOX 2A: 
Open a chroot terminal.  Open a chroot terminal

DIALOG BOX 2B:
Opens an xterm terminal.  Run the chroot scripts here and exit to return to Dialog Box 2A.

BACK TO DIALOG BOX 2A: Select Back or next.  (Select Next.)

DIALOG BOX 3A:
Build.  Enter filename and description.  (Make sure the filename isn't too long.)

DIALOG BOX 3B: Build live CD?  Select yes or no.  (Select yes.)

The end result will be an ISO file in /root .

FUNCTION FLOW:
def __init__(self), functions are called when triggered by events defined in "dic = statement"
    self.appName = "MintConstructor"        
    self.mountDir = '/media/cdrom'
    self.tmpDir = "tmp"
    self.tmpPackageDir = "tmp_packages"
    self.customDir = ""
    self.createNewProject = False        
    self.isoFilename = ""
    self.buildLiveCdFilename = ''        
    self.watch = gtk.gdk.Cursor(gtk.gdk.WATCH)
    self.working = None
    self.workingDlg = None        
    self.interactiveEdit = False
    self.pageLiveSetup = 0
    self.pageLiveCustomize = 1
    self.pageLiveBuild = 2
    self.pageFinish = 3        
    self.gnomeBinPath = '/usr/bin/gnome-session'
    self.f = sys.stdout
    self.treeModel = None
    self.treeView = None
    Create self.mountDir directory if it does not already exist
    SET currentProject = '/root' if running as root
    SET iso_name = "Linux Mint <VERSION> <EDITION> <XX>-bit"
	DIC self.on_buttonNext_clicked
		CALL self.checkPage(page)
			IF pageNum == self.pageLiveSetup == 0 (already True)
				CALL self.saveSetupInfo
					SET self.customDir = self.wTree.get_widget("entryWorkingDir").get_text() = '/root'
					SET self.createNewProject = self.wTree.get_widget("radiobutton_new_project").get_active() = True
					SET self.isoFilename = self.wTree.get_widget("entryIsoFilename").get_text() = '/mnt/host/linuxmint-201109-gnome-dvd-32bit.iso'
				END self.saveSetupInfo
				SET self.interactiveEdit = False
				IF self.checkCustomDir() == True
					self.customDir <> ""
					Create self.customDir if not already present
				RETURN True to self.checkCustomDir()
					IF self.createNewProject == True (already True)
						IF self.checkWorkingDir(), True
							self.wTree.get_widget("radiobutton_new_project").get_active() = self.createNewProject = True
							remasterExists = None
							rootExists = None
							workingDirOk = True
						RETURN workingDirOk, True to self.checkWorkingDir()
							DIALOG BOX 1B
							if response == gtk.RESPONSE_OK
								gobject.idle_add(self.setupWorkingDirectory)
									# remaster dir
									IF self.createNewProject == True (already True)
										IF remaster directory in self.customDir doesn't exist, create it
										self.isoFilename = '/mnt/host/linuxmint-201109-gnome-dvd-32bit.iso'
										IF self.isoFilename <> ""
											print _("Using ISO for squashfs root...")
											os.popen('mount -o loop \"' + self.isoFilename + '\" ' + self.mountDir)
										# copy remaster files
										# unmount iso/cd-rom
									# custom root dir
									IF self.createNewProject == True (already True)
										IF root directory in self.customDir doesn't exist, create it
										# check for existing directories and remove if necessary
										# extract squashfs into custom root
										# check for iso
										self.isoFilename = '/mnt/host/linuxmint-201109-gnome-dvd-32bit.iso'
										IF self.isoFilename <> ""
											print _("Using ISO for squashfs root...")
											os.popen('mount -o loop \"' + self.isoFilename + '\" ' + self.mountDir)
										# copy remaster files
										# mount squashfs root
										# copy squashfs root
										# umount tmpsquashfs
										# umount cdrom
										# remove tmpsquash
										# set proper permissions - MUST DO WITH UBUNTU
									print _("Finished setting up working directory...")
									RETURN False to setupWorkingDirectory(self)
								gobject.idle_add(self.readyUp)
									self.setDefaultCursor()
									self.setPage(self.pageLiveCustomize) =1
								Return TRUE to self.checkPage(page)
	END self.on_buttonNext_clicked
	
	DIC self.on_buttonNext_clicked
		CALL self.checkPage(page)
			elif pageNum == self.pageLiveCustomize == 1 (now 1)
				filename = d.strftime("dev-%Y%m%d-%H%M") + ".iso"
				DIALOG BOX 3A
				iso_name =
				DIALOG BOX 3B
				self.setPage(self.pageLiveBuild), 2
				CALL self.checkEnableBurnIso()
				END self.checkEnableBurnIso()
				Return True to self.checkPage(page)
	END self.on_buttonNext_clicked
	
	DIC self.on_buttonNext_clicked
		CALL self.checkPage(page)
			elif pageNum == self.pageLiveBuild, 2
	END self.on_buttonNext_clicked
